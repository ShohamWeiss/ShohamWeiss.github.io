<html><head><meta content="text/html; charset=UTF-8" http-equiv="content-type"><style type="text/css">@import url('https://themes.googleusercontent.com/fonts/css?kit=OPeqXG-QxW3ZD8BtmPikfA');ol.lst-kix_z375g8xhudrr-6{list-style-type:none}ol.lst-kix_z375g8xhudrr-7{list-style-type:none}ol.lst-kix_z375g8xhudrr-4{list-style-type:none}ol.lst-kix_z375g8xhudrr-5{list-style-type:none}ol.lst-kix_z375g8xhudrr-2{list-style-type:none}ol.lst-kix_z375g8xhudrr-3{list-style-type:none}ol.lst-kix_z375g8xhudrr-0{list-style-type:none}ol.lst-kix_z375g8xhudrr-1{list-style-type:none}ol.lst-kix_lgoimeapbubr-3.start{counter-reset:lst-ctn-kix_lgoimeapbubr-3 0}.lst-kix_lgoimeapbubr-6>li{counter-increment:lst-ctn-kix_lgoimeapbubr-6}ol.lst-kix_z375g8xhudrr-8{list-style-type:none}.lst-kix_z375g8xhudrr-3>li{counter-increment:lst-ctn-kix_z375g8xhudrr-3}ol.lst-kix_lgoimeapbubr-0.start{counter-reset:lst-ctn-kix_lgoimeapbubr-0 0}ol.lst-kix_z375g8xhudrr-1.start{counter-reset:lst-ctn-kix_z375g8xhudrr-1 0}.lst-kix_z375g8xhudrr-5>li{counter-increment:lst-ctn-kix_z375g8xhudrr-5}ol.lst-kix_z375g8xhudrr-4.start{counter-reset:lst-ctn-kix_z375g8xhudrr-4 0}ol.lst-kix_z375g8xhudrr-7.start{counter-reset:lst-ctn-kix_z375g8xhudrr-7 0}.lst-kix_lgoimeapbubr-8>li{counter-increment:lst-ctn-kix_lgoimeapbubr-8}.lst-kix_lgoimeapbubr-5>li{counter-increment:lst-ctn-kix_lgoimeapbubr-5}.lst-kix_z375g8xhudrr-1>li{counter-increment:lst-ctn-kix_z375g8xhudrr-1}ol.lst-kix_lgoimeapbubr-5.start{counter-reset:lst-ctn-kix_lgoimeapbubr-5 0}ol.lst-kix_lgoimeapbubr-8{list-style-type:none}.lst-kix_lgoimeapbubr-3>li{counter-increment:lst-ctn-kix_lgoimeapbubr-3}ol.lst-kix_z375g8xhudrr-5.start{counter-reset:lst-ctn-kix_z375g8xhudrr-5 0}.lst-kix_lgoimeapbubr-8>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-8,lower-roman) ". "}.lst-kix_lgoimeapbubr-6>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-6,decimal) ". "}.lst-kix_lgoimeapbubr-7>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-7,lower-latin) ". "}.lst-kix_lgoimeapbubr-0>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-0,decimal) ". "}.lst-kix_lgoimeapbubr-1>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-1,lower-latin) ". "}.lst-kix_lgoimeapbubr-2>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-2,lower-roman) ". "}.lst-kix_lgoimeapbubr-3>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-3,decimal) ". "}ol.lst-kix_z375g8xhudrr-6.start{counter-reset:lst-ctn-kix_z375g8xhudrr-6 0}ol.lst-kix_lgoimeapbubr-6.start{counter-reset:lst-ctn-kix_lgoimeapbubr-6 0}.lst-kix_lgoimeapbubr-4>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-4,lower-latin) ". "}.lst-kix_lgoimeapbubr-5>li:before{content:"" counter(lst-ctn-kix_lgoimeapbubr-5,lower-roman) ". "}.lst-kix_dc6nnndl2o0r-7>li:before{content:"-  "}.lst-kix_dc6nnndl2o0r-6>li:before{content:"-  "}ol.lst-kix_lgoimeapbubr-6{list-style-type:none}ol.lst-kix_lgoimeapbubr-7{list-style-type:none}ol.lst-kix_lgoimeapbubr-4{list-style-type:none}.lst-kix_z375g8xhudrr-7>li{counter-increment:lst-ctn-kix_z375g8xhudrr-7}ol.lst-kix_lgoimeapbubr-5{list-style-type:none}ol.lst-kix_lgoimeapbubr-2{list-style-type:none}ol.lst-kix_lgoimeapbubr-3{list-style-type:none}ol.lst-kix_lgoimeapbubr-0{list-style-type:none}.lst-kix_dc6nnndl2o0r-8>li:before{content:"-  "}.lst-kix_z375g8xhudrr-4>li{counter-increment:lst-ctn-kix_z375g8xhudrr-4}ol.lst-kix_lgoimeapbubr-1{list-style-type:none}ol.lst-kix_z375g8xhudrr-0.start{counter-reset:lst-ctn-kix_z375g8xhudrr-0 0}.lst-kix_dc6nnndl2o0r-2>li:before{content:"-  "}.lst-kix_dc6nnndl2o0r-3>li:before{content:"-  "}.lst-kix_dc6nnndl2o0r-5>li:before{content:"-  "}.lst-kix_dc6nnndl2o0r-4>li:before{content:"-  "}.lst-kix_z375g8xhudrr-8>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-8,lower-roman) ". "}.lst-kix_z375g8xhudrr-6>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-6,decimal) ". "}.lst-kix_z375g8xhudrr-7>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-7,lower-latin) ". "}.lst-kix_yd54lz6y0ejz-8>li:before{content:"-  "}.lst-kix_lgoimeapbubr-0>li{counter-increment:lst-ctn-kix_lgoimeapbubr-0}.lst-kix_dc6nnndl2o0r-1>li:before{content:"-  "}.lst-kix_z375g8xhudrr-5>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-5,lower-roman) ". "}.lst-kix_dc6nnndl2o0r-0>li:before{content:"-  "}ol.lst-kix_z375g8xhudrr-3.start{counter-reset:lst-ctn-kix_z375g8xhudrr-3 0}.lst-kix_yd54lz6y0ejz-3>li:before{content:"-  "}.lst-kix_z375g8xhudrr-2>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-2,lower-roman) ". "}.lst-kix_z375g8xhudrr-3>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-3,decimal) ". "}.lst-kix_yd54lz6y0ejz-2>li:before{content:"-  "}.lst-kix_yd54lz6y0ejz-4>li:before{content:"-  "}.lst-kix_z375g8xhudrr-0>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-0,decimal) ". "}.lst-kix_z375g8xhudrr-4>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-4,lower-latin) ". "}.lst-kix_yd54lz6y0ejz-7>li:before{content:"-  "}.lst-kix_yd54lz6y0ejz-6>li:before{content:"-  "}.lst-kix_z375g8xhudrr-0>li{counter-increment:lst-ctn-kix_z375g8xhudrr-0}.lst-kix_yd54lz6y0ejz-5>li:before{content:"-  "}.lst-kix_z375g8xhudrr-1>li:before{content:"" counter(lst-ctn-kix_z375g8xhudrr-1,lower-latin) ". "}.lst-kix_z375g8xhudrr-8>li{counter-increment:lst-ctn-kix_z375g8xhudrr-8}.lst-kix_lgoimeapbubr-2>li{counter-increment:lst-ctn-kix_lgoimeapbubr-2}ol.lst-kix_lgoimeapbubr-7.start{counter-reset:lst-ctn-kix_lgoimeapbubr-7 0}ol.lst-kix_lgoimeapbubr-1.start{counter-reset:lst-ctn-kix_lgoimeapbubr-1 0}.lst-kix_yd54lz6y0ejz-0>li:before{content:"-  "}.lst-kix_yd54lz6y0ejz-1>li:before{content:"-  "}ol.lst-kix_lgoimeapbubr-4.start{counter-reset:lst-ctn-kix_lgoimeapbubr-4 0}ul.lst-kix_dc6nnndl2o0r-2{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-1{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-0{list-style-type:none}ul.lst-kix_yd54lz6y0ejz-0{list-style-type:none}ol.lst-kix_lgoimeapbubr-8.start{counter-reset:lst-ctn-kix_lgoimeapbubr-8 0}ol.lst-kix_z375g8xhudrr-8.start{counter-reset:lst-ctn-kix_z375g8xhudrr-8 0}.lst-kix_z375g8xhudrr-2>li{counter-increment:lst-ctn-kix_z375g8xhudrr-2}.lst-kix_z375g8xhudrr-6>li{counter-increment:lst-ctn-kix_z375g8xhudrr-6}.lst-kix_lgoimeapbubr-7>li{counter-increment:lst-ctn-kix_lgoimeapbubr-7}.lst-kix_lgoimeapbubr-4>li{counter-increment:lst-ctn-kix_lgoimeapbubr-4}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_lgoimeapbubr-1>li{counter-increment:lst-ctn-kix_lgoimeapbubr-1}ol.lst-kix_lgoimeapbubr-2.start{counter-reset:lst-ctn-kix_lgoimeapbubr-2 0}ul.lst-kix_yd54lz6y0ejz-3{list-style-type:none}ul.lst-kix_yd54lz6y0ejz-4{list-style-type:none}ul.lst-kix_yd54lz6y0ejz-1{list-style-type:none}ul.lst-kix_yd54lz6y0ejz-2{list-style-type:none}ul.lst-kix_yd54lz6y0ejz-7{list-style-type:none}ol.lst-kix_z375g8xhudrr-2.start{counter-reset:lst-ctn-kix_z375g8xhudrr-2 0}ul.lst-kix_yd54lz6y0ejz-8{list-style-type:none}ul.lst-kix_yd54lz6y0ejz-5{list-style-type:none}ul.lst-kix_yd54lz6y0ejz-6{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-8{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-7{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-6{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-5{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-4{list-style-type:none}ul.lst-kix_dc6nnndl2o0r-3{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.c14{padding-top:18pt;padding-bottom:6pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c6{padding-top:20pt;padding-bottom:6pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c17{padding-top:0pt;padding-bottom:3pt;line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:center}.c9{background-color:#ffffff;font-weight:400;vertical-align:baseline;font-size:10.5pt;font-family:"Courier New";font-style:normal}.c2{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:center}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c11{font-weight:400;vertical-align:baseline;font-size:16pt;font-family:"Arial";font-style:normal}.c13{font-weight:400;vertical-align:baseline;font-size:20pt;font-family:"Arial";font-style:normal}.c10{font-weight:400;vertical-align:baseline;font-size:11pt;font-family:"Arial";font-style:normal}.c22{font-weight:400;vertical-align:baseline;font-size:26pt;font-family:"Arial";font-style:normal}.c21{color:#4d5156;text-decoration:none;vertical-align:baseline;font-style:normal}.c4{background-color:#ffffff;font-size:10.5pt;font-family:"Roboto";font-weight:400}.c19{background-color:#ffffff;font-size:10.5pt;font-family:"Courier New";font-weight:400}.c23{font-weight:400;vertical-align:baseline;font-family:"Arial";font-style:normal}.c15{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c20{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c12{color:#212121;text-decoration:none}.c8{color:#000000;text-decoration:none}.c3{color:inherit;text-decoration:inherit}.c7{margin-left:36pt;padding-left:0pt}.c16{padding:0;margin:0}.c18{font-size:12pt}.c5{height:11pt}.c0{font-style:italic}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:"Arial"}p{margin:0;color:#000000;font-size:11pt;font-family:"Arial"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class="c20 doc-content"><p class="c17 title" id="h.mupwvkeicdhq"><span class="c8 c22">Yelp Business Recommendation Engine</span></p><h1 class="c6" id="h.qpmr454a5yn5"><span class="c18">Drive: </span><span class="c15 c18"><a class="c3" href="https://www.google.com/url?q=https://drive.google.com/drive/folders/1XNba2otSLvDK7xhA0O0O949hOkporSYE?usp%3Dsharing&amp;sa=D&amp;source=editors&amp;ust=1683494020358383&amp;usg=AOvVaw0GFDm4RmQvIiIfoj5biUN8">https://drive.google.com/drive/folders/1XNba2otSLvDK7xhA0O0O949hOkporSYE?usp=sharing</a></span></h1><p class="c1"><span class="c10 c8">Notebook:</span></p><p class="c1"><span class="c15"><a class="c3" href="https://www.google.com/url?q=https://colab.research.google.com/drive/1Sof4qHdcS4Xc7XZQkY-z7X_n4VXapiCW%23scrollTo%3DmP-Pk3pYBGdZ&amp;sa=D&amp;source=editors&amp;ust=1683494020359002&amp;usg=AOvVaw1ePihPZ3jC7k9V-HNMAjfD">https://colab.research.google.com/drive/1Sof4qHdcS4Xc7XZQkY-z7X_n4VXapiCW#scrollTo=mP-Pk3pYBGdZ</a></span></p><p class="c1"><span class="c10 c8">Powepoint Explanation:</span></p><p class="c1"><span class="c15"><a class="c3" href="https://www.google.com/url?q=https://docs.google.com/presentation/d/1NQJUdAAJt3x1jTvznaZRodwpOa5VGaH5tU7h4gXyayk/edit%23slide%3Did.p&amp;sa=D&amp;source=editors&amp;ust=1683494020359445&amp;usg=AOvVaw0_nZKWf21aAq7Y6Uc8izLq">https://docs.google.com/presentation/d/1NQJUdAAJt3x1jTvznaZRodwpOa5VGaH5tU7h4gXyayk/edit#slide=id.p</a></span><span class="c10 c8">&nbsp;</span></p><p class="c1"><span class="c10 c8">Video Explanation PowerPoint:</span></p><p class="c1"><span class="c15"><a class="c3" href="https://www.google.com/url?q=https://www.youtube.com/watch?v%3Dy8ioU87ICyA&amp;sa=D&amp;source=editors&amp;ust=1683494020359672&amp;usg=AOvVaw2UnmaS_4wrT7s8-u74_VFz">https://www.youtube.com/watch?v=y8ioU87ICyA</a></span><span class="c10 c8">&nbsp;</span></p><p class="c1"><span class="c10 c8">Video Explanation Code:</span></p><p class="c1"><span class="c15"><a class="c3" href="https://www.google.com/url?q=https://www.youtube.com/watch?v%3DvxtT1V9zDz0&amp;sa=D&amp;source=editors&amp;ust=1683494020359870&amp;usg=AOvVaw2oEaNNPFtkNlfkcazqPVnF">https://www.youtube.com/watch?v=vxtT1V9zDz0</a></span><span class="c10 c8">&nbsp;</span></p><h1 class="c6" id="h.gasa6f4oru2m"><span class="c13 c8">Introduction</span></h1><p class="c1"><span class="c10 c8">In this project, we build a recommender system using the Yelp Open Dataset. Since the Yelp dataset is so large, most previous works take a subsample of the data for their project. They typically decide on a subsample by focusing on a city, or timespan. We aim to get a more accurate recommender system than previous methods by intelligently cutting the large dataset down instead of using predetermined rules, like choosing a city. We explore cutting the data down in a more statistically driven way using Spark rather than with predefined rules. The motivation is to see if other ways of filtering the data can increase recommender system performance.</span></p><p class="c1"><span class="c10 c8">This project will give an insight into whether cutting the Yelp data down statistically can lead to better recommendation systems. We believe that having a wider range of people in our dataset can lead to a larger latent space which could lead to a better understanding of people&rsquo;s preferences. Our results would show whether a larger, less correlated dataset can perform better than a specialized one.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span>We run a detailed analysis of the large dataset to have good understanding of how to filter the data. We then train several recommender systems with different hyper parameters and see if we can outperform previous attempts.</span></p><h1 class="c6" id="h.qbuxovl0jl5c"><span class="c13 c8">Background</span></h1><p class="c1"><span class="c10 c8">With the advancement of distributed systems and improvements in hardware, big data has become a common aspect of data science. With this, big data challenges and datasets have been released to allow data scientist to learn and practice. In 2018, Yelp.com, a business review website released a dataset called the Yelp Open Dataset [1]. Yelp challenged people to extract any analysis and analytics on this data. </span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">Yelp.com is a website for crowd sourcing business reviews. Many people use Yelp to let their fellow consumers know about their experience at a business and people use yelp to decide what businesses to use when they need some service, such as a restaurant or a barber. Yelp collects an immense amount of reviews, user and business data as part of its system. They contribute a sample of their data to the public to be used for educational purposes, called the Yelp Open Dataset [1]. Since this data has been released, many exploratory data analyses and machine learning models have been trained on top of this data.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span>In Kaggle, the Yelp Dataset has been downloaded 1539 times, with 219 available notebooks in kaggle exploring the data and attempting to fit models to it. Two of the top notebooks exploring this data are written by </span><span class="c0">&lsquo;Bukun</span><span>&rsquo; and &lsquo;</span><span class="c0">Jagan</span><span>&rsquo;. [2, 3] Bukun run an in depth exploratory data analysis, Text Mining, Network Analysis and Geospacial Analysis on a subset of the data focused on Las Vegas, Toronto, and Phoenix. Jagan runs exploratory analysis focusing on Las Vegas for the reviews dataset, and also focuses more on the smaller business, and user datasets. Some other people such as Ruchi Singh and Jongwook Woo have tried using the full dataset for the task of predicting a business&rsquo;s rating which was Yelp&rsquo;s Open Dataset original challenge. [4, 5] To do this they use Azure and Databricks which provide more powerful cloud compute resources. They also mention how other previous works like Gwo-Hshiung Tzeng et al. concentrates on the criteria for a good restaurant location in Taipei, again focusing on a subset of the data based on location. [6] Several works have been done attempting ot create a recommendation system using the Yelp dataset, for example Dominic Ong created a medium article creating a recommender system from the Yelp Dataset focusing on Toronto. [7] All of these follow the trend of increasing compute power or focusing on a specific city to tackle the large dataset.</span></p><h1 class="c6" id="h.qmittqk4tawv"><span class="c13 c8">Dataset</span></h1><p class="c1"><span class="c10 c8">The dataset is called the Yelp Open Dataset which was released as part of the Yelp Open Dataset Challenge to predict a business&rsquo;s rating. The dataset contains 7 million reviews, 2 million tips, 150 thousand businesses data and 2 million user data. The data is 4 GB in size and formatted in a json format. We focus on the reviews subset of the available data which contains the following columns:</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">Review_id: string 22 character unique review id</span></p><p class="c1"><span class="c10 c8">User_id: string 22 character unique user id</span></p><p class="c1"><span class="c10 c8">Business_id: string 22 character unique business id</span></p><p class="c1"><span class="c10 c8">Stars: integer, star rating</span></p><p class="c1"><span class="c10 c8">Date: string date formatted YYYY-MM-DD</span></p><p class="c1"><span class="c10 c8">Text: string, the review itself</span></p><p class="c1"><span class="c10 c8">Useful: integer, the number of useful votes the review received</span></p><p class="c1"><span class="c10 c8">Funny: integer, the number of funny votes the review received</span></p><p class="c1"><span>Cool: integer, the number of cool votes the review received</span></p><h1 class="c6" id="h.pap0ni3xsxlr"><span class="c13 c8">Analysis of Dataset</span></h1><h2 class="c14" id="h.13mbfu9h9k1k"><span class="c8 c11">Raw Dataset</span></h2><p class="c1"><span class="c10 c8">After importing the data into pyspark, we need to get a basic understanding of the data. So, we look at the schema of the dataset and a small subsample. In figure XX, we can see the schema of our dataset</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 350.50px; height: 187.89px;"><img alt="" src="images/image9.png" style="width: 350.50px; height: 187.89px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c8 c9"><br>Figure 1: Schema of raw dataset (inferred by pyspark)</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 89.33px;"><img alt="" src="images/image27.png" style="width: 624.00px; height: 89.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c19"><br>Figure 2: Subsample of the raw dataset</span></p><p class="c1"><span class="c8">As can be seen in </span><span class="c8"><a class="c3" href="#D2L_fig_ref_Schema of raw dataset (inferred by pyspark)">Fig. 1Fig. 1Fig. 1Fig. 1Fig. 1Fig. 1Fig. 1Fig. 1</a></span><span class="c8">&nbsp;most of the columns are inferred to be the correct type by pyspark except for the date column which should be a datetime and not a string. In </span><span class="c8"><a class="c3" href="#D2L_fig_ref_Subsample of the raw dataset">Fig. 2Fig. 2Fig. 2Fig. 2Fig. 2Fig. 2Fig. 2Fig. 2</a></span><span class="c8">, we see that each id is some GUID, the main rating, called stars is a double to allow for half star ratings and each review has a number of upvotes for whether it is funny, cool, or useful. Lastly, the text field contains a readable string of the full review left.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c8">Before we make changes to the data, we also check to see if there are any nulls in the data to see if we need to impute or remove data. As seen in </span><span class="c8"><a class="c3" href="#D2L_fig_ref_Checking for nulls">Fig. 3Fig. 3Fig. 3Fig. 3Fig. 3Fig. 3Fig. 3Fig. 3</a></span><span class="c8">&nbsp;there are no nulls.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 539.50px; height: 126.78px;"><img alt="" src="images/image14.png" style="width: 539.50px; height: 126.78px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 3: Checking for nulls</span></p><p class="c1"><span class="c8">We now convert our date column into a timestamp type as seen in </span><span class="c8"><a class="c3" href="#D2L_fig_ref_Converting to timestamp">Fig. 4Fig. 4Fig. 4Fig. 4Fig. 4Fig. 4Fig. 4Fig. 4</a></span><span class="c8">.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 597.50px; height: 60.32px;"><img alt="" src="images/image20.png" style="width: 597.50px; height: 60.32px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span><br>Figure 4: Converting to timestamp</span></p><h2 class="c14" id="h.qa36zv6zmzfc"><span class="c11 c8">What is a Common User?</span></h2><p class="c1"><span class="c10 c8">We know our data is too big to handle complex tasks such as training a machine learning model without more ram. To aid with this problem we plan to filter our data down using statistics, where previous methods used pre-set rules like choosing a city to focus on. To start off our statistical filtering, we look at how many reviews are left by each user, we want to focus on average users for our recommender system.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">To get a feel of what an average user is, We look at the top 20 users, the average number of reviews per user, and create a historgram of the number of reviews people leave.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 347.50px; height: 335.81px;"><img alt="" src="images/image24.png" style="width: 347.50px; height: 335.81px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 5: Top 20 users with most reviews</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 506.33px; height: 125.49px;"><img alt="" src="images/image23.png" style="width: 506.33px; height: 125.49px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 6: Average amount of reviews per user</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 327.50px; height: 216.38px;"><img alt="" src="images/image21.png" style="width: 327.50px; height: 216.38px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 7: Histogram of number of reviews per user</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">We see in this data that there is a large span across which people leave reviews. Some users leave thousands of reviews while most leave no more than 4. To have a good recommender system we will need at least 50 reviews per user and we can say that we don&rsquo;t need more than 100 reviews per user. This filtering cuts down from 2 million users to 10 thousand users, which cuts down from 7 million reviews to 500 thousand. We can then see a distribution of how many reviews per user for the filtered data, again we see most users leave less reviews and its exponentially rarer to get higher number of reviews.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 334.50px; height: 209.06px;"><img alt="" src="images/image5.png" style="width: 334.50px; height: 209.06px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 8: Histogram of number of reviews per reviewer for the filtered data</span></p><h2 class="c14" id="h.bztitpyejt5g"><span class="c11 c8">What is an average business?</span></h2><p class="c1"><span class="c10 c8">Similarly to users, we want to find the average businesses to suggest to people. Clearly businesses with alot of reviews are very good or very bad. But this does not give niche recommendations and the reviews between popular businesses and users don&rsquo;t tell us much about either as they are too common.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">We look at how many reviews the businesses with most reviews have, the average amount of reviews a business gets, and a histogram of the number of reviews businesses get.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 366.50px; height: 337.49px;"><img alt="" src="images/image7.png" style="width: 366.50px; height: 337.49px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 9: Top 20 businesses with the most reviews</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 514.50px; height: 101.42px;"><img alt="" src="images/image28.png" style="width: 514.50px; height: 101.42px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c9 c8"><br>Figure 10: Average number of reviews per business</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 418.00px; height: 248.00px;"><img alt="" src="images/image25.png" style="width: 418.00px; height: 248.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c9 c8"><br>Figure 11: Histogram of number of reviews per business</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">Again we see a large range with some businesses getting thousands of reviews while most businesses are closer to the tens to hundreds. Here we see a higher average but since we want to make sure we have enough data we still want at least 100 reviews for a business to have an effective recommender system. So we keep the businesses with at least 100 reviews and at most 500 reviews to target more average businesses. This reduces the number of businesses from ~150 thousand to ~14 thousand. This takes the number of reviews down from ~7 million to ~2.7 million. And we get the following histogram of how frequent each number of reviews is for a business. Again an exponential decay with businesses getting a higher amount of reviews being less frequent.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 389.00px; height: 248.00px;"><img alt="" src="images/image13.png" style="width: 389.00px; height: 248.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c9 c8"><br>Figure 12: Histogram of number of reviews per business after filtering</span></p><p class="c1 c5"><span class="c9 c8"></span></p><h2 class="c14" id="h.7t81ayqmvc1i"><span class="c11 c8">Are reviews really cool, funny, or useful?</span></h2><p class="c1"><span class="c10 c8">When we apply both filters we go from ~7 million reviews to ~1 million reviews. Each review can be marked as funny, cool, or useful. We can get a sense of what an average review is by seeing how cool, funny, or useful reviews usually are. To do this we take a subsample of the 1 million reviews and get some statistics.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">We look at the mean, standard deviation, min, 25%, 50%, 75%, max statistic of the funny, cool, and useful votes on reviews.</span></p><p class="c1 c5"><span class="c9 c12"></span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 257.33px;"><img alt="" src="images/image15.png" style="width: 624.00px; height: 257.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c9 c8"><br>Figure 13: Statistics on the cool, funny, useful columns</span></p><p class="c1 c5"><span class="c9 c12"></span></p><p class="c1"><span class="c10 c8">We see most reviews don&rsquo;t get cool, funny or useful votes, maybe 1, 2, or 3 votes on average. We also look at the histograms of our sample:</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 387.00px; height: 264.00px;"><img alt="" src="images/image16.png" style="width: 387.00px; height: 264.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c19"><br>Figure 14: Histogram of useful counts on reviews</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 393.00px; height: 264.00px;"><img alt="" src="images/image26.png" style="width: 393.00px; height: 264.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c19"><br>Figure 15: Histogram of funny counts on reviews</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 393.00px; height: 264.00px;"><img alt="" src="images/image6.png" style="width: 393.00px; height: 264.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c19"><br>Figure 16: Histogram of cool counts on reviews</span></p><p class="c1"><span class="c10 c8">Reviews that are overly useful, funny, or cool might be more advertisements to the businesses rather than true reviews showing people&rsquo;s preferences. With this in mind, we decide to filter the highly rated reviews for each category setting a max useful, funny, cool rating of 20. This does not cut down our data much going from a ~11920 sample to a ~11900 sample, but it removes outliers, allowing the new histograms to show more visible trends.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 387.00px; height: 264.00px;"><img alt="" src="images/image1.png" style="width: 387.00px; height: 264.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c19"><br>Figure 17: Histogram of useful counts on reviews after filtering</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 387.00px; height: 264.00px;"><img alt="" src="images/image18.png" style="width: 387.00px; height: 264.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c19"><br>Figure 18: Histogram of funny counts on reviews after filtering</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 387.00px; height: 264.00px;"><img alt="" src="images/image3.png" style="width: 387.00px; height: 264.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c19"><br>Figure 19: Histogram of cool counts on reviews after filtering</span></p><p class="c1 c5"><span class="c9 c12"></span></p><p class="c1 c5"><span class="c9 c12"></span></p><p class="c1"><span class="c10 c8">We now have 232116 reviews that we can use to train a recommender system.</span></p><h2 class="c14" id="h.amkp6b500hgk"><span class="c11 c8">Sentiment Analysis</span></h2><p class="c1"><span class="c10 c8">Each review has a text field which contains the actual sentiment and experience the person had at the business. This is useful information, as useful as the star ratings and we need to use it as part of our recommender system. To do this, we run sentiment analysis on the reviews and use that to later create a superscore combing the star score with the sentiment.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">There are multiple approaches for how to run sentiment analysis on our data. We initially try the spark native tool, spark-nlp which offers using pretrained sentiment analysis models. This approach gave a distribution of sentiments, but as can seen in _ it does not give accurate sentiments.</span></p><p class="c1 c5"><span class="c10 c8"></span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 68.00px;"><img alt="" src="images/image19.png" style="width: 624.00px; height: 68.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 20: Examples of sentiment from the sparknlp library</span></p><p class="c1"><span class="c8">The sentiments only match the actual text sentiment in 1 out of the 5 examples I show in </span><span class="c8"><a class="c3" href="#D2L_fig_ref_Examples of sentiment from the sparknlp library">Fig. 20Fig. 20</a></span><span class="c8">. Therefore, we decide to use the transformers library which provides a pretrained distilbert state of the art sentiment analysis model. This gives accurate sentiments for our data as can be seen in </span><span class="c8"><a class="c3" href="#D2L_fig_ref_Examples of sentiment analysis by huggingface&#39;s distilbert">Fig. 21Fig. 21</a></span><span class="c8">.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 66.67px;"><img alt="" src="images/image8.png" style="width: 624.00px; height: 66.67px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 21: Examples of sentiment analysis by huggingface&#39;s distilbert</span></p><p class="c1 c5"><span class="c10 c8"></span></p><h2 class="c14" id="h.v0fi98tqbphs"><span class="c11 c8">Superscore</span></h2><p class="c1"><span class="c10 c8">For our superscore we simply add 1 to the stars score if the sentiment is positive and add 0 if its negative. With this all the rankings are out of 6 instead of 5. This embeds the information in the review a little more into the rating.</span></p><h1 class="c6" id="h.t76ygysoojr1"><span class="c8 c13">Implementation</span></h1><p class="c1"><span class="c10 c8">Our main approach is to build a User-Item matrix and run a singular value decomposition to create a latent representation of similar people and similar businesses for this we need 3 features. The user, the business and a superscore connecting how much the user liked the business. The superscore will be the combination of the rating with the sentiment analysis on the review. We need to prepare our data to run collaborative filtering:</span></p><p class="c1 c5"><span class="c10 c8"></span></p><ol class="c16 lst-kix_lgoimeapbubr-0 start" start="1"><li class="c1 c7 li-bullet-0"><span class="c10 c8">id and business_id fields from strings to integers</span></li><li class="c1 c7 li-bullet-0"><span class="c10 c8">We have to create a test-train split and cache our training dataframe</span></li><li class="c1 c7 li-bullet-0"><span class="c10 c8">We have to try several hyperparameters</span></li></ol><p class="c1 c5"><span class="c10 c8"></span></p><p class="c1"><span class="c10 c8">To ensure our spark session can handle the large training load, we set our spark config to use all 4 cores on our colab notebook, using 16 GB on executor memory, and 6 GB of driver memory. We also set up a spark checkpoint directory to our google drive in case of a crash.</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 144.00px;"><img alt="" src="images/image4.png" style="width: 624.00px; height: 144.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 22: Setting up the Spark session for performance</span></p><p class="c1"><span class="c8 c10">To convert our string id field into an integer field we use spark&rsquo;s StringIndexer which maps each string to an index and add that index as a new column. We do this for both user_id and business_id:</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 185.33px;"><img alt="" src="images/image11.png" style="width: 624.00px; height: 185.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 23: Setting up the string indexers for the IDs</span></p><p class="c1"><span class="c10 c8">We split split our data using spark&rsquo;s randomSplit function to 80% training, 20% testing. We also cache our training set in memory to help with performance:</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 558.50px; height: 75.18px;"><img alt="" src="images/image2.png" style="width: 558.50px; height: 75.18px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 24: Train-Test split</span></p><p class="c1"><span>We use singular value decomposition with the </span><span class="c4 c21">Alternating Least Squares (ALS algorithm). For this algorithm we try several hyper parameter configurations for the rank (5, 10, 15), max iterations (5, 10, 15), and regularization parameter (0.1):</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 329.33px;"><img alt="" src="images/image10.png" style="width: 624.00px; height: 329.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c4"><br>Figure 25: Running collaborative filtering with hyperparameter tuning</span></p><h1 class="c6" id="h.qp2bmaoib1s"><span class="c13 c8">Results</span></h1><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 319.50px; height: 92.16px;"><img alt="" src="images/image22.png" style="width: 319.50px; height: 92.16px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 26: 1000 subsample collaborative filtering with superscore</span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 305.50px; height: 87.73px;"><img alt="" src="images/image12.png" style="width: 305.50px; height: 87.73px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span class="c10 c8"><br>Figure 27: 1000 subsample collaborative filtering </span></p><p class="c2"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 298.50px; height: 89.01px;"><img alt="" src="images/image17.png" style="width: 298.50px; height: 89.01px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span><span><br>Figure 28: Full dataset collaborative filtering with stars only</span></p><h1 class="c6" id="h.gnt3n7pxpile"><span class="c13 c8">References</span></h1><ol class="c16 lst-kix_z375g8xhudrr-0 start" start="1"><li class="c1 c7 li-bullet-0"><span>&nbsp;&quot;Yelp Open Dataset.&quot; </span><span class="c0">Yelp</span><span class="c10 c8">, 1 Jan. 2018, www.yelp.com/dataset. Accessed 1 Apr. 2023.</span></li><li class="c1 c7 li-bullet-0"><span>&nbsp;&quot;What&#39;s in a Review? - Yelp Ratings EDA.&quot; </span><span class="c0">Kaggle</span><span class="c10 c8">, 1 Jan. 2018, www.kaggle.com/code/jagangupta/what-s-in-a-review-yelp-ratings-eda. Accessed 1 Apr. 2023.</span></li><li class="c1 c7 li-bullet-0"><span>&quot;A Very Extensive Data Analysis of Yelp.&quot; </span><span class="c0">Kaggle</span><span class="c10 c8">, 1 Jan. 2018, www.kaggle.com/code/ambarish/a-very-extensive-data-analysis-of-yelp. Accessed 1 Apr. 2023.</span></li><li class="c1 c7 li-bullet-0"><span class="c10 c8">Singh, Ruchi &amp; Woo, Jongwook. (2019). Applications of Machine Learning Models on Yelp Data. Asia Pacific Journal of Information Systems. 29. 65-49. 10.14329/apjis.2019.29.1.35. </span></li><li class="c1 c7 li-bullet-0"><span class="c10 c8">Singh, Ruchi &amp; Ananth, Yashaswi &amp; Woo, Jongwook. (2017). Big data analysis of local business and reviews. 1-5. 10.1145/3154943.3154946. </span></li><li class="c1 c7 li-bullet-0"><span class="c10 c8">Tzeng, Gwo-Hshiung &amp; Teng, Mei-Hwa &amp; Chen, June-Jye &amp; Opricovic, Serafim. (2002). Multicriteria selection for a restaurant location in Taipei. International Journal of Hospitality Management. 21. 171-187. 10.1016/S0278-4319(02)00005-1. </span></li><li class="c1 c7 li-bullet-0"><span>Ong, Dominic . &quot;Yelp Restaurant Recommendation System &mdash; Data Science Capstone Project.&quot; </span><span class="c0">Medium</span><span>, 20 Oct. 2020, towardsdatascience.com/yelp-restaurant-recommendation-system-capstone-project-264fe7a7dea1. Accessed 1 Apr. 2023.</span></li></ol></body></html>